{"version":3,"sources":["crud_list_m.coffee"],"names":[],"mappings":"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","file":"crud_list_m.js","sourceRoot":"/source/","sourcesContent":["$(->\n    table_name = window.bz.getUrlParm()[2]\n    v_crud_list = {}\n    count=0\n    search_parms=[]\n    _pageCount = 10 #每页显示10条记录\n    _currPageNo = 1\n    _onbeforeunloadCleanStorage = true\n    \n    window.onbeforeunload = (event) ->\n        if _onbeforeunloadCleanStorage\n            window.sessionStorage.clear()\n            \n    \n    # 从sessionStorage中获取搜索条件并写入hash\n    if window.sessionStorage\n        storageData = window.sessionStorage.getItem(\"search_curd_list_\" + table_name)\n        if(storageData)\n            window.location.hash = \"\"\n            searchPams = storageData.split(\";\")\n            if(searchPams[0] != \"\")\n                for searchPam in searchPams\n                    if(searchPam == \"\")\n                        continue\n                    searchKeyValue = searchPam.split(\"=\")\n                    if(searchKeyValue[0] == \"\" || searchKeyValue[1] == \"\")\n                        continue\n                    window.bz.setHashPram(searchKeyValue[0], searchKeyValue[1])\n        \n    # 从hash中获取搜索参数并写入到搜索框,并构建search_parms    \n    _hashStrTemp = window.location.hash.replace('#','')\n    if(_hashStrTemp)\n        search_parms=[]\n        _hashsTemp = _hashStrTemp.split(\";\")\n        for _hashItemTemp in _hashsTemp\n            if(_hashItemTemp == \"\")\n                continue\n            _hashTemp = _hashItemTemp.split(\"=\")\n            if(_hashTemp[0] == \"\" || _hashTemp[1] == \"\" || _hashTemp[0].indexOf(\"search_\") == -1)\n                continue\n            if($(\"#\" + _hashTemp[0]))\n                $(\"#\" + _hashTemp[0]).val(_hashTemp[1])\n                objTemp = {\"name\": _hashTemp[0].replace(\"search_\", \"\"), \"value\": _hashTemp[1]}\n                search_parms.push(objTemp)\n\n    # 判断hash中是否有当前页参数,如果没有则设为1\n    if(!window.bz.getHashPram(\"p\") || isNaN(window.bz.getHashPram(\"p\")))\n        window.bz.setHashPram(\"p\",\"1\")\n    # 从hash中获取当前页\n    _currPageNo = parseInt(window.bz.getHashPram(\"p\"))\n                     \n    \n    load = (currPage, beginIndex, endIndex, limit) ->\n        #window.location.hash = currPage\n        window.bz.setHashPram(\"p\",currPage)\n        if window.sessionStorage\n            window.sessionStorage.setItem(\"search_curd_list_\" + table_name, window.location.hash.replace(\"#\",\"\")) # window.location.hash.replace(/#p=\\d*;/g,\"\")\n        if v_crud_list.$data\n            v_crud_list.$data.loading=true\n        if(!limit)\n            limit = 10\n        if(!beginIndex)\n            beginIndex = 1\n        $.post('/crud_list_api/' + table_name + '?limit=' + limit + '&offset=' + beginIndex+'&find=true',\n                JSON.stringify {table_name:table_name, search_parms:search_parms}\n                ).done((d1)->\n                if d1.error != \"0\"\n                    window.bz.showError5(d1.error)\n                    return\n                d1.array.forEach((n)->\n                    n.checked = false\n                )\n                v_crud_list.$set(\"list\", d1.array)\n                v_crud_list.$data.loading=false\n            )\n            \n            \n    Vue.directive('on-search',\n        twoWay: true\n        bind:(value) ->\n            eventAndFun = @raw.split(\":\")\n            @[\"search_fn_\" + eventAndFun[0] + eventAndFun[1]] = (->\n                @vm[eventAndFun[1]]()\n            ).bind(@)\n            if eventAndFun[0] == \"enter\"\n                eventName = \"onkeypress\"\n                _vue_this = @\n                @el[eventName] = (event)->\n                    if event && event.keyCode == 13\n                        _vue_this[\"search_fn_\" + eventAndFun[0] + eventAndFun[1]]()\n            else\n                eventName = \"on\" + eventAndFun[0]\n                @el[eventName] = @[\"search_fn_\" + eventAndFun[0] + eventAndFun[1]]\n        update:(value) ->\n        unbind:() ->\n            eventNameKey = @raw.split(\":\")[0]\n            eventName = \"on\" + eventNameKey\n            @el[eventName] = undefined\n    )\n            \n    \n    v_crud_list = new Vue\n            el: '#v_crud_list'\n            data:\n                list: []\n                record:{}\n                module: \"normal\"\n                loading:true\n                loading_target:\"#v_crud_list\"\n                pagination: \n                    resultCount: 1\n                    showFL: true\n                    showFN: true\n                    pageCount: _pageCount\n                    currPage: _currPageNo\n                    showPageNum: 7\n                    gotoPageFun: load\n                    onInitedLoadCurrPageData: false\n            methods:\n                detail: (event, record)->\n                    console.log record\n                    if record == \"new\"\n                        window.location.href = \"/crud/\" + table_name\n                        _onbeforeunloadCleanStorage = false\n                        return\n                    if @module == 'normal'\n                        window.location.href = \"/crud/\" + table_name + \"#\" + record.id\n                        _onbeforeunloadCleanStorage = false\n                        return\n                    else if record.checked\n                        record.checked = false\n                        $(event.target).siblings(\".check-column\").find(\"input[type=checkbox]\").prop('checked', false)\n                    else\n                        record.checked = true\n                        $(event.target).siblings(\".check-column\").find(\"input[type=checkbox]\").prop('checked', true)\n                moduleToggle: ->\n                    if @module == 'edit'\n                        @$set('module', 'normal')\n                    else if @module == 'normal'\n                        @$set('module', 'edit')\n                searchToggle: ->\n                    $('.moreSearch').toggle()\n                    $('#gridSearch').toggle()\n                find:->\n                    search_parms=[]        \n                    i=0\n                    searchs=$(\".form-search\")           \n                    for s in searchs\n                        if s.value\n                            a={\"name\":s.name,\"value\": s.value}\n                            window.bz.setHashPram(\"search_\" + s.name, s.value)\n                            search_parms[i]=a\n                            i=i+1\n                        else\n                            window.bz.setHashPram(\"search_\" + s.name, \"\")\n                    $.post('/crud_list_api/'+table_name+ '?queryCount=true&find=true',\n                           JSON.stringify {table_name:table_name, search_parms:search_parms}\n                    ).done((data)->\n                        v_crud_list.$data.pagination.resultCount = data.count\n                    )\n                       \n                del: ->\n                    del_array = _.pluck(_.where(@list, {\"checked\": true}), \"id\")\n                    $.ajax\n                        url: '/crud_list_api/' + table_name\n                        type: 'DELETE'\n                        data:  del_array.join(\",\")\n                    .done((data)->\n                        if data.error == \"0\"\n                            window.bz.showSuccess5(\"删除成功。\")\n                            load()\n                        else\n                            window.bz.showError5(data.error)\n                    )\n                    return\n                    \n    $.post('/crud_list_api/' + table_name + '?queryCount=true&find=true',\n        JSON.stringify {table_name:table_name, search_parms:search_parms}\n    ).done((data) ->\n        #if(window.location.hash == '' || isNaN(window.location.hash.replace('#','')))\n        #    window.location.hash = '1'\n        _resultCount = data.count\n        _endPage = parseInt(_resultCount/_pageCount)\n        if(_resultCount%_pageCount > 0)\n            _endPage = _endPage + 1\n        if(_currPageNo > _endPage)\n            #window.location.hash = '1'\n            window.bz.setHashPram(\"p\",\"1\")\n            _currPageNo = 1\n            v_crud_list.$data.pagination.currPage = _currPageNo\n            \n        v_crud_list.$data.pagination.resultCount = _resultCount\n        \n\n    )\n)\n"]}